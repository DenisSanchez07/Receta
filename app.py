# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CZ6l-AD9sQgwJr2HmrCLZTb373ZFEgK2
"""

import streamlit as st
from datetime import date
from tabulate import tabulate

# --- Función para calcular el volumen en función del nivel (%) ---
def calcular_volumen_por_nivel(x):
    return 0.0001 * (x ** 2) + 0.1763 * x

# --- App principal ---
def main():
    st.title("🧪 Preparación de Solución al 1% p/p")
    st.markdown("**Cálculo de volúmenes, masas y texto técnico tipo correo**")

    # Entradas del usuario
    st.header("🔧 Ingreso de Datos")
    nivel_inicial = st.number_input("Nivel inicial del tanque (%)", min_value=0.0, max_value=100.0, value=15.0)
    nivel_final = st.number_input("Nivel final del tanque (%)", min_value=0.0, max_value=100.0, value=88.0)
    densidad_solvente = st.number_input("Densidad del solvente (kg/m³)", value=729.8)

    # Constantes
    porcentaje_soluto = 0.01
    densidad_soluto = 930.0
    nombre_soluto = "EC-1010A"

    # Cálculo de volumen
    volumen_objetivo = round(calcular_volumen_por_nivel(nivel_final) - calcular_volumen_por_nivel(nivel_inicial), 6)

    # Cálculo de densidad real (base 100 kg de solución)
    masa_base = 100.0
    masa_soluto_base = masa_base * porcentaje_soluto
    masa_solvente_base = masa_base - masa_soluto_base

    volumen_soluto_base = masa_soluto_base / densidad_soluto
    volumen_solvente_base = masa_solvente_base / densidad_solvente
    volumen_total_base = volumen_soluto_base + volumen_solvente_base

    densidad_real = masa_base / volumen_total_base

    # Cálculo de masas y volúmenes reales
    masa_total = volumen_objetivo * densidad_real
    masa_soluto = masa_total * porcentaje_soluto
    masa_solvente = masa_total - masa_soluto

    volumen_soluto = masa_soluto / densidad_soluto
    volumen_solvente = masa_solvente / densidad_solvente

    # --- Mostrar tabla técnica ---
    st.header("📊 Resultados Técnicos")

    data = [
        ["Nivel inicial del tanque", f"{nivel_inicial:.1f} %"],
        ["Nivel final del tanque", f"{nivel_final:.1f} %"],
        ["Volumen preparado", f"{volumen_objetivo:.4f} m³"],
        ["Densidad real solución", f"{densidad_real:.4f} kg/m³"],
        ["Masa total solución", f"{masa_total:.2f} kg"],
        ["Masa del soluto (1%)", f"{masa_soluto:.2f} kg"],
        ["Masa del solvente (99%)", f"{masa_solvente:.2f} kg"],
        ["Volumen del soluto", f"{volumen_soluto:.4f} m³"],
        ["Volumen del solvente", f"{volumen_solvente:.4f} m³"],
    ]
    st.table(data)

    # --- Generar texto técnico tipo correo ---
    st.header("📧 Texto Técnico Tipo Correo")
    fecha_hoy = date.today().strftime("%Y-%m-%d")

    tabla_correo = [
        ["EC-1010A (soluto)", f"{int(round(volumen_soluto * 1000))} L", f"{int(round(masa_soluto))} kg"],
        ["Nafta pesada hidrotratada", f"{int(round(volumen_solvente * 1000))} L", f"{int(round(masa_solvente))} kg"],
        ["Total solución preparada", f"{int(round(volumen_objetivo * 1000))} L", f"{int(round(masa_total))} kg"],
    ]
    tabla_texto = tabulate(tabla_correo, headers=["Componente", "Volumen", "Masa"], tablefmt="github")

    texto_correo = f"""
1.         Premisas para la preparación:

a. Densidad de la nafta pesada hidrotratada: {densidad_solvente:.1f} kg/m³ (Data JLBT {fecha_hoy}).
b. Nivel del drum HTN-D-025 a considerar: {nivel_inicial:.1f} %.
c. Objetivo para aforar es hasta el {nivel_final:.1f}%, para utilizar la máxima cantidad del PQ una vez abierto el cilindro, que sea fácil de contabilizar en campo y estar por debajo de la alarma de alta (90%).

2.         Preparación de la Solución:

{tabla_texto}

3.         Información para retirar producto de almacén (JIYA):

a. Código Material: 64-000-40699.
b. Proveedor: QUIMTIA.
c. Nombre comercial: {nombre_soluto}.
d. Presentación: Cilindro de 193 kg.
"""
    st.code(texto_correo, language="markdown")

# Ejecutar app
if __name__ == "__main__":
    main()